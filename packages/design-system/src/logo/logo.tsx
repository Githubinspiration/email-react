import * as React from 'react';

export type LogoSize = '1' | '2' | '3';

interface LogoDefaultProps {
  size?: LogoSize;
  color?: string;
}

interface LogoProps
  extends Omit<React.ComponentPropsWithRef<'svg'>, 'size' | 'color'>,
    LogoDefaultProps {}

export const Logo = React.forwardRef<SVGSVGElement, LogoProps>(
  ({ color = '#fff', className, size, ...props }, forwardedRef) => (
    <svg
      ref={forwardedRef}
      width={getSize(size)}
      height={getSize(size)}
      viewBox="0 0 32 32"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g clipPath="url(#logo)">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M26.9411 27.3137C27.9785 26.2764 28.174 24.8732 28.0596 23.6613C27.9438 22.4339 27.4929 21.1011 26.8528 19.7716C26.276 18.5736 25.5069 17.2993 24.5762 16C25.5069 14.7007 26.276 13.4264 26.8528 12.2284C27.4929 10.8989 27.9438 9.56611 28.0596 8.3387C28.174 7.12677 27.9785 5.72364 26.9411 4.68629C25.9038 3.64894 24.5006 3.45338 23.2887 3.56778C22.0613 3.68364 20.7285 4.13448 19.3991 4.77458C18.201 5.35143 16.9267 6.12048 15.6274 7.05122C14.3281 6.12048 13.0538 5.35143 11.8558 4.77458C10.5263 4.13448 9.19352 3.68365 7.96612 3.56778C6.75419 3.45338 5.35106 3.64894 4.31371 4.68629C3.27636 5.72364 3.0808 7.12677 3.1952 8.3387C3.31106 9.56611 3.7619 10.8989 4.402 12.2284C4.97885 13.4264 5.7479 14.7007 6.67864 16C5.7479 17.2993 4.97885 18.5736 4.402 19.7716C3.7619 21.1011 3.31106 22.4339 3.1952 23.6613C3.0808 24.8732 3.27636 26.2764 4.31371 27.3137C5.35106 28.3511 6.75419 28.5466 7.96612 28.4322C9.19352 28.3164 10.5263 27.8655 11.8558 27.2254C13.0538 26.6486 14.3281 25.8795 15.6274 24.9488C16.9267 25.8795 18.201 26.6486 19.3991 27.2254C20.7285 27.8655 22.0613 28.3164 23.2887 28.4322C24.5006 28.5466 25.9038 28.3511 26.9411 27.3137ZM15.6274 22.5974C16.7865 21.6912 17.9654 20.6499 19.1214 19.4939C20.2773 18.338 21.3186 17.1591 22.2248 16C21.3186 14.8409 20.2773 13.662 19.1214 12.5061C17.9654 11.3501 16.7865 10.3088 15.6274 9.40264C14.4683 10.3088 13.2895 11.3501 12.1335 12.5061C10.9775 13.662 9.93618 14.8409 9.03005 16C9.93618 17.1591 10.9775 18.338 12.1335 19.4939C13.2895 20.6499 14.4683 21.6912 15.6274 22.5974ZM17.1997 23.7527C18.2906 22.8744 19.3847 21.8926 20.4524 20.825C21.5201 19.7573 22.5018 18.6632 23.3801 17.5723C25.9583 21.3226 26.9503 24.6425 25.6101 25.9827C24.2699 27.3229 20.95 26.3309 17.1997 23.7527ZM7.8747 17.5723C8.753 18.6632 9.73478 19.7573 10.8025 20.825C11.8701 21.8926 12.9642 22.8744 14.0552 23.7527C10.3049 26.3309 6.98494 27.3229 5.64473 25.9827C4.30452 24.6425 5.2965 21.3226 7.8747 17.5723ZM7.8747 14.4277C8.753 13.3368 9.73478 12.2427 10.8025 11.175C11.8701 10.1074 12.9642 9.12559 14.0552 8.24729C10.3049 5.66909 6.98494 4.67711 5.64473 6.01732C4.30452 7.35753 5.2965 10.6774 7.8747 14.4277ZM17.1997 8.24729C18.2906 9.12559 19.3847 10.1074 20.4524 11.175C21.5201 12.2427 22.5018 13.3368 23.3801 14.4277C25.9583 10.6774 26.9503 7.35753 25.6101 6.01732C24.2699 4.6771 20.95 5.66909 17.1997 8.24729Z"
          fill={color}
        />
      </g>
      <defs>
        <clipPath id="logo">
          <rect width={getSize(size)} height={getSize(size)} fill={color} />
        </clipPath>
      </defs>
    </svg>
  ),
);

Logo.displayName = 'Logo';

const getSize = (size: LogoSize | undefined) => {
  switch (size) {
    case '1':
      return '20';
    case '2':
      return '24';
    case '3':
      return '32';
  }
};
